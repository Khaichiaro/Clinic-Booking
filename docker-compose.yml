version: '3.9'
services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    networks:
      - frontend

  user-service:
    build: ./backend/user-service
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/mydb
    depends_on:
      - db
    networks:
      - backend

  doctor-service:
    build: ./backend/doctor-service
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/mydb
    depends_on:
      - db
    networks:
      - backend

  appointment-service:
    build: ./backend/appointment-service
    ports:
      - "5002:5002"
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/mydb
    depends_on:
      - db
    networks:
      - backend

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8081:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - frontend
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "5000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - user-service
      - doctor-service
      - appointment-service
    networks:
      - frontend
      - backend

networks:
  frontend:
  backend:
  monitoring:

volumes:
  db_data:
  jenkins_home:
