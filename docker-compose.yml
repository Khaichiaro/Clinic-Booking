version: '3.9'
services:
  frontend:
    build: ./frontend
    container_name: frontend
    depends_on:
      - backend
    restart: always
    ports:
      - "5173:5173"
    networks:
      - frontend

  backend:
    build: ./backend
    container_name: backend
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: clinic_db
    ports:
      - "5001:5000"
    depends_on:
      - db
    networks:
      - backend

  db:
    image: postgres:latest
    container_name: db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  # pgadmin:
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - monitoring

  grafana:
      image: grafana/grafana
      container_name: grafana
      ports:
        - "3000:3000"
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=admin
        - GF_SERVER_SERVE_FROM_SUB_PATH=true
        - GF_SERVER_ROOT_URL=http://localhost/grafana/
      volumes:
        - grafana_data:/var/lib/grafana
      networks:
        - monitoring

  # jenkins:
  #   image: jenkins/jenkins:lts
  #   ports:
  #     - "8081:8080"
  #   volumes:
  #     - jenkins_home:/var/jenkins_home
  #   networks:
  #     - frontend
  #     - backend

  reverse-proxy:
    build: ./nginx
    container_name: reverse-proxy
    restart: always
    networks:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

networks:
  frontend:
  backend:
  monitoring:

volumes:
  postgres_data:
  grafana_data:
  jenkins_home:
