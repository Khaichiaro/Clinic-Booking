import React, { useState } from 'react';
import { DatePicker, TimePicker } from 'antd';
import dayjs, { Dayjs } from 'dayjs';
import { createDoctorSchedule } from '../../service/http/doctor'; // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ
import styles from './DoctorSchedule.module.css';
import { useNavigate } from "react-router-dom";

const DoctorSchedule: React.FC = () => {
  const [selectedDates, setSelectedDates] = useState<string[]>([]);
  const [startTime, setStartTime] = useState<Dayjs | null>(null);
  const [endTime, setEndTime] = useState<Dayjs | null>(null);
  const navigate = useNavigate();


  const onDateChange = (dates: Dayjs[], dateStrings: string[]) => {
    setSelectedDates(dateStrings);
    console.log('Selected dates:', dateStrings);
  };

  const onStartTimeChange = (time: Dayjs | null) => {
    setStartTime(time);
    console.log('Start Time:', time?.format('HH:mm'));
  };

  const onEndTimeChange = (time: Dayjs | null) => {
    setEndTime(time);
    console.log('End Time:', time?.format('HH:mm'));
  };

  const handleSubmit = async () => {
    try {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!startTime || !endTime) {
        alert("Please select both start and end time.");
        return;
      }

      // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô string format "HH:mm"
      const start_time = startTime.format("HH:mm");
      const end_time = endTime.format("HH:mm");

      // ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡πÉ‡∏´‡πâ doctorId ‡πÄ‡∏õ‡πá‡∏ô 1 (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å session ‡∏´‡∏£‡∏∑‡∏≠ API ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
      const doctorId = 1;

      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏≠
      const result = await createDoctorSchedule(doctorId, selectedDates, start_time, end_time);
      console.log("Schedule created successfully:", result);
      alert("Schedule saved successfully");''
      navigate("/doctor");
    } catch (error) {
      console.error("Failed to create schedule:", error);
      alert("Failed to save schedule");
    }
  };

  return (
    <div className={styles['docsch-container']}>
      <div className={styles['docsch-card']}>
        <h2 className={styles['docsch-title']}>ü©∫ Doctor's work schedule</h2>

        {/* DatePicker */}
        <div className={styles['docsch-picker']}>
          <DatePicker
            multiple
            onChange={onDateChange}
            defaultValue={[dayjs('2025-06-01'), dayjs('2025-06-03')]}
            size="middle"
            className={styles['docsch-date-picker']}
          />
        </div>

        {/* TimePicker */}
        <div className={styles['docsch-picker']}>
          <h3>‚è∞ Set Time</h3>
          <div className={styles['docsch-time-picker']}>
            <TimePicker
              value={startTime}
              onChange={onStartTimeChange}
              format="HH:mm"
              placeholder="Start Time"
              className={styles['docsch-time']}
            />
            <TimePicker
              value={endTime}
              onChange={onEndTimeChange}
              format="HH:mm"
              placeholder="End Time"
              className={styles['docsch-time']}
            />
          </div>
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å */}
        <button className={styles['docsch-btn']} onClick={handleSubmit}>Save Schedule</button>
      </div>
    </div>
  );
};

export default DoctorSchedule;
